:javascript
  function htmlEscape(str) {
    return String(str)
    .replace(/&/g, '&amp;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#39;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;');
  }
-section = {}
-section['Function'] = 'Provides any useful information about the protein, mostly biological knowledge.<br><br><a href="http://www.uniprot.org/manual/function_section" target="_blank">More...</a>'
-section['Structure'] = 'Provides information on the tertiary structure of a protein.<br><br><a href="http://www.uniprot.org/manual/structure_section" target="_blank">More...</a>'
-section['Ptm/processing'] = 'Describes post-translational modifications (PTMs) and/or processing events.<br><br><a href="http://www.uniprot.org/manual/ptm_processing_section" target="_blank">More...</a>'
-section['Family and domains'] = 'Provides information on sequence similarities with other proteins and the domain(s) present in a protein.<br><br><a href="http://www.uniprot.org/manual/family_and_domains_section" target="_blank">More...</a>'
-section['Subcellular location'] = 'Provides information on the location and the topology of the mature protein in the cell.<br><br><a href="http://www.uniprot.org/manual/subcellular_location_section" target="_blank">More...</a>'
-section['Pathology and biotech'] = 'Provides information on the disease(s) and phenotype(s) associated with the deficiency of a protein.<br><br><a href="http://www.uniprot.org/manual/pathology_and_biotech_section" target="_blank">More...</a>'
-section['Sequence'] = 'Displays by default the canonical protein sequence and upon request all isoforms described in the entry. It also includes information pertinent to the sequence(s), including length and molecular weight.<br><br><a href="http://www.uniprot.org/manual/sequences_section" target="_blank">More...</a>'
-subsection = {}
-#FUNCTION
-subsection["Binding site"] = 'Describes the interaction between a single amino acid and another chemical entity. Priority is given to the annotation of physiological ligands.<br><br><a href="http://www.uniprot.org/manual/binding" target="_blank">More...</a>'
-subsection["Site"] = 'Describes interesting single amino acid sites on the sequence that are not defined in any other subsection. This subsection can be displayed in different sections (‘Function’, ‘PTM / Processing’, ‘Pathology and Biotech’) according to its content.<br><br><a href="http://www.uniprot.org/manual/site" target="_blank">More...</a>'
-subsection["Dna-binding region"] = 'Specifies the position and type of each DNA-binding domain present within the protein.<br><br><a href="http://www.uniprot.org/manual/dna_bind" target="_blank">More...</a>'
-subsection["Zinc finger region"] = 'Specifies the position(s) and type(s) of zinc fingers within the protein.<br><br><a href="http://www.uniprot.org/manual/zn_fing" target="_blank">More...</a>'
-subsection["Active site"] = 'Is used for enzymes and indicates the residues directly involved in catalysis.<br><br><a href="http://www.uniprot.org/manual/act_site" target="_blank">More...</a>'
-subsection["Calcium-binding region"] = 'Specifies the position(s) of the calcium-binding region(s) within the protein. One common calcium-binding motif is the EF-hand, but other calcium-binding motifs also exist.<br><br><a href="http://www.uniprot.org/manual/ca_bind" target="_blank">More...</a>'
-subsection["Metal ion-binding site"] = 'Indicates at which position the protein binds a given metal ion. The nature of the metal is indicated in the ‘Description’ field.<br><br><a href="http://www.uniprot.org/manual/metal" target="_blank">More...</a>'
-subsection["Nucleotide phosphate-binding region"] = 'Describes the interaction between a single amino acid and another chemical entity. Priority is given to the annotation of physiological ligands.<br><br><a href="http://www.uniprot.org/manual/binding" target="_blank">More...</a>'
-#PTM/PROCESSING
-subsection["Modified residue"] = 'Specifies the position and type of each modified residue excluding lipids, glycans and protein cross-links.<br><br><a href="http://www.uniprot.org/manual/mod_res" target="_blank">More...</a>'
-subsection["Glycosylation site"] = 'Specifies the position and type of each covalently attached glycan group (mono-, di-, or polysaccharide).<br><br><a href="http://www.uniprot.org/manual/carbohyd" target="_blank">More...</a>'
-subsection["Chain"] = 'Describes the extent of a polypeptide chain in the mature protein following processing.<br><br><a href="http://www.uniprot.org/manual/chain" target="_blank">More...</a>'
-subsection["Signal peptide"] = 'Denotes the presence of an N-terminal signal peptide.<br><br><a href="http://www.uniprot.org/manual/signal" target="_blank">More...</a>'
-subsection["Disulfide bond"] = 'Describes the positions of cysteine residues participating in disulfide bonds.<br><br><a href="http://www.uniprot.org/manual/disulfid" target="_blank">More...</a>'
-subsection["Cross-link"] = 'Describes covalent linkages of various types formed between two proteins (interchain cross-links) or between two parts of the same protein (intrachain cross-links), except the disulfide bonds that are annotated in the ‘Disulfide bond’ subsection.<br><br><a href="http://www.uniprot.org/manual/crosslnk" target="_blank">More...</a>'
-subsection["Initiator methionine"] = 'Indicates that the initiator methionine is cleaved from the mature protein.<br><br><a href="http://www.uniprot.org/manual/init_met" target="_blank">More...</a>'
-subsection["Propeptide"] = 'Describes a propeptide, which is a part of a protein that is cleaved during maturation or activation. Once cleaved, a propeptide generally has no independent biological function.<br><br><a href="http://www.uniprot.org/manual/propep" target="_blank">More...</a>'
-subsection["Peptide"] = 'Describes the position and length of an active peptide in the mature protein.<br><br><a href="http://www.uniprot.org/manual/peptide" target="_blank">More...</a>'
-#FAMILY AND DOMAINS
-subsection["Region of interest"] = 'Describes a region of interest that cannot be described in other subsections.<br><br><a href="http://www.uniprot.org/manual/region" target="_blank">More...</a>'
-subsection["Compositionally biased region"] = 'Describes the position of regions of compositional bias within the protein and the particular amino acids that are over-represented within those regions.<br><br><a href="http://www.uniprot.org/manual/compbias" target="_blank">More...</a>'
-subsection["Coiled-coil region"] = 'Denotes the positions of regions of coiled coil within the protein.<br><br><a href="http://www.uniprot.org/manual/coiled" target="_blank">More...</a>'
-subsection["Domain"] = 'Describes the position and type of a domain, which is defined as a specific combination of secondary structures organized into a characteristic three-dimensional structure or fold.<br><br><a href="http://www.uniprot.org/manual/domain" target="_blank">More...</a>'
-subsection["Repeat"] = 'Indicates the positions and types of repeated sequence motifs or repeated domains within the protein.<br><br><a href="http://www.uniprot.org/manual/repeat" target="_blank">More...</a>'
-subsection["Short sequence motif"] = 'Describes a short (usually not more than 20 amino acids) conserved sequence motif of biological significance.<br><br><a href="http://www.uniprot.org/manual/motif" target="_blank">More...</a>'
-#STRUCTURE
-subsection["Helix"] = 'Is used to indicate the positions of experimentally determined helical regions within the protein sequence.<br><br><a href="http://www.uniprot.org/manual/helix" target="_blank">More...</a>'
-subsection["Strand"] = 'Is used to indicate the positions of experimentally determined beta strands within the protein sequence.<br><br><a href="http://www.uniprot.org/manual/strand" target="_blank">More...</a>'
-#SUBCELLULAR LOCATION
-subsection["Topological domain"] = 'Describes the subcellular compartment where each non-membrane region of a membrane-spanning protein is found.<br><br><a href="http://www.uniprot.org/manual/topo_dom" target="_blank">More...</a>'
-subsection["Transmembrane region"] = 'Describes the extent of a membrane-spanning region of the protein. It denotes the presence of both alpha-helical transmembrane regions and the membrane spanning regions of beta-barrel transmembrane proteins.<br><br><a href="http://www.uniprot.org/manual/transmem" target="_blank">More...</a>'
-subsection["Intramembrane region"] = 'Describes the extent of a region in a membrane, which does not cross it.<br><br><a href="http://www.uniprot.org/manual/intramem" target="_blank">More...</a>'
-#PATHOLOGY AND BIOTECH
-subsection["Mutagenesis site"] = 'Describes the effect of the experimental mutation of one or more amino acid(s) on the biological properties of the protein.<br><br><a href="http://www.uniprot.org/manual/mutagen" target="_blank">More...</a>'
-#SEQUENCE
-subsection["Sequence variant"] = 'Describes natural variant(s) of the protein sequence.<br><br><a href="http://www.uniprot.org/manual/variant" target="_blank">More...</a>'
-subsection["Sequence conflict"] = 'Reports difference(s) between the canonical sequence (displayed by default in the entry) and the different sequence submissions merged in the entry. These various submissions may originate from different sequencing projects, different types of experiments, or different biological samples. Sequence conflicts are usually of unknown origin.<br><br><a href="http://www.uniprot.org/manual/conflict" target="_blank">More...</a>'
-subsection["Non-standard amino acid"] = 'Describes the occurrence of non-standard amino acids selenocysteine (Sec) or pyrrolysine (Pyl) in the protein sequence.<br><br><a href="http://www.uniprot.org/manual/non_std" target="_blank">More...</a>'
-subsection["Non-terminal residue"] = 'Is used for sequence fragments to indicate that the residue at the extremity of the sequence is not the actual terminal residue in the complete protein sequence.<br><br><a href="http://www.uniprot.org/manual/non_ter" target="_blank">More...</a>'
-subsection["Non-consecutive residues"] = 'Is used to indicate that two residues in a sequence are not consecutive and that there is an undetermined number of unsequenced residues between them.<br><br><a href="http://www.uniprot.org/manual/non_cons" target="_blank">More...</a>'
-subsection["Unsure residue"] = 'Is used to describe region(s) of a sequence for which the authors are unsure about the sequence assignment.<br><br><a href="http://www.uniprot.org/manual/unsure" target="_blank">More...</a>'
#loading{:style=>'display:none;width:100%;height:100%;'}
  =image_tag("loading.gif",size:"200x200",:style=>"display:block;margin:auto;position:relative;top:50%;transform:translateY(-50%);")
#frameWithBorder
  :javascript
    pfamArray = [];
  -if @alignment.nil? and @uniprotLength.nil?
    %h2{:style=>"margin-right:8px;color:#606060;font-size:14px;margin-top:14px;text-align:center;"}
      USE THE SELECT MENU TO BROWSE PROTEIN ANNOTATIONS
  -if !@alignment.nil? and @alignment["uniprot"].nil?
    %h2{:style=>"margin-right:8px;color:#606060;font-size:14px;margin-top:14px;text-align:center;"}
      NO ALIGNMENTS AVAILABLE WITH UNIPROT
  -elsif !@alignment.nil? and !@uniprotLength.nil?
    %ul
      -@annotsData.each_with_index do |(annClass,annData),index|
        -liOut = "li:#{index}"
        -aOut = "a:#{index}"
        -divOut = "content:#{index}"
        %li.hide{:id=>"#{liOut}"}
          -if annClass=="uniprot"
            =#link_to(image_tag("uniprot.png",size:"20x20"),"http://www.uniprot.org/uniprot/#{@alignment["uniprot"]}",:target=>"_blank",:style=>"position:absolute;top:15px;left:120px;")
            %h1{:style=>"display:inline-block"}
              %a.nostyle{:id=>"#{aOut}",:href=>"javascript:toggleClass('#{liOut}');toggleVisibility('#{divOut}');"}
                UniProt
              =#link_to(image_tag("uniprot.png",size:"20x20"),"http://www.uniprot.org/uniprot/#{@alignment["uniprot"]}",:target=>"_blank")
          -elsif annClass=="iedb"
            %h1{:style=>"display:inline-block"}
              %a.nostyle{:id=>"#{aOut}",:href=>"javascript:toggleClass('#{liOut}');toggleVisibility('#{divOut}');"}
                ImmuneEpitopeDB
              =#link_to(image_tag("uniprot.png",size:"20x20"),"http://www.uniprot.org/uniprot/#{@alignment["uniprot"]}",:target=>"_blank")
          -elsif annClass=="phosphosite"
            %h1{:style=>"display:inline-block"}
              %a.nostyle{:id=>"#{aOut}",:href=>"javascript:toggleClass('#{liOut}');toggleVisibility('#{divOut}');"}
                PhosphoSitePlus
              =#link_to(image_tag("uniprot.png",size:"20x20"),"http://www.uniprot.org/uniprot/#{@alignment["uniprot"]}",:target=>"_blank")
          -elsif annClass=="biomuta"
            %h1{:style=>"display:inline-block"}
              %a.nostyle{:id=>"#{aOut}",:href=>"javascript:toggleClass('#{liOut}');toggleVisibility('#{divOut}');"}
                BioMuta
              =#link_to(image_tag("uniprot.png",size:"20x20"),"http://www.uniprot.org/uniprot/#{@alignment["uniprot"]}",:target=>"_blank")
          %div{:id=>"#{divOut}",:class=>"hideContent",:style=>"display:none"}
            %ul
              -if annClass=="uniprot" or annClass=="iedb" or annClass=="phosphosite" or annClass=="biomuta"
                -if annData.empty?
                  %p
                    %img{:src=>asset_path("minus_red.png"),:style=>"position:relative;top:4px;"}
                    No annotations were found.
                  :javascript
                    $j(document).ready(function(){
                      toggleClass('#{liOut}');
                      toggleVisibility('#{divOut}');
                    });
                -else  
                  -annData.each_with_index do |(annType,annotations),index2|
                    -liMed = "li:#{index}:#{index2}"
                    -aMed = "a:#{index}:#{index2}"
                    -divMed = "content:#{index}:#{index2}"
                    %li.hide{:id=>"#{liMed}"}
                      %h2{:style=>"display:inline-block"}
                        %a.nostyle{:id=>"#{aMed}",:href=>"javascript:toggleClass('#{liMed}');toggleVisibility('#{divMed}')"}
                          =annType.capitalize
                        -if !section[annType.capitalize].nil?
                          :javascript
                            $j(document).ready(function() {
                              var domElm = document.getElementById('#{aMed}');
                              $j(domElm).tooltipster({
                                contentAsHTML:true,
                                delay: 1500,
                                position: 'top-left',
                                content: $j('<span>'+'#{section[annType.capitalize]}'+'</span>'),
                                theme: 'tooltipster-light',
                                trigger: 'hover',
                                interactive: true
                              });
                            });
                      %div{:id=>"#{divMed}",:class=>"hideContent",:style=>"display:none"}
                        -if !@generalData[annClass].nil?
                          -if !@generalData[annClass][annType].nil?
                            %p{:style=>"font-size:10px;padding-right:15px;text-align:justify;margin-top:0px;"}
                              -@generalData[annClass][annType].split("\n").sort.each_with_index do |gEach,index|
                                -if gEach =~ /^Note:/
                                  %span{:style=>"color:grey;"}
                                    =gEach
                                -else
                                  =gEach
                                -if index == (@generalData[annClass][annType].split("\n").sort.length - 1)
                                  =link_to(image_tag("external.png",size:"10x10"),"http://www.uniprot.org/uniprot/#{@alignment["uniprot"]}##{annType.downcase.gsub(" ","_").gsub("/","_")}",:target=>"_blank")
                                %br
                        %ul
                          -sortedAnnotations = annotations.sort_by{|e| e["start"]}
                          -sortedAnnotations.each_with_index do |annotation,index3|
                            -miFinalIndex = "#{index}:#{index2}:#{index3}"
                            #annotation
                              %li.hide{:id=>"li:#{miFinalIndex}"}
                                %h3{:style=>"display:inline-block"}
                                  %a.nostyle{:id=>"a:#{miFinalIndex}",:class=>"pos:#{annotation["start"]}-#{annotation["end"]}",:href=>"javascript:toggleClass('li:#{miFinalIndex}');toggleVisibility('content:#{miFinalIndex}')"}
                                    -if !annotation["original"].nil? and !annotation["variation"].nil? and !annotation["subtype"].nil?
                                      -spliceString = "#{annotation["subtype"].capitalize}" + " (" + "#{annotation["original"]} "+ "→".html_safe + " #{annotation["variation"]}"  +")"
                                      -if spliceString.length < 42
                                        =spliceString
                                      -else
                                        =spliceString[0..41] + "..."
                                    -elsif !annotation["subtype"].nil?
                                      ="#{annotation["subtype"].capitalize}"
                                    -else
                                      -if annClass=="iedb"
                                        ="Linear region"
                                      -elsif annClass=="biomuta"
                                        ="Mutagenesis site (#{ annotation["original"]} " + "→".html_safe + " #{annotation["variation"]} )"
                                  -if !annotation["subtype"].nil?
                                    -if !subsection[(annotation["subtype"].capitalize)].nil?
                                      :javascript
                                        $j(document).ready(function() {
                                          var domElmIn = document.getElementById('a:#{miFinalIndex}');
                                          $j(domElmIn).tooltipster({
                                            contentAsHTML: true,
                                            delay: 1500,
                                            position: 'top-left',
                                            content: $j('<span>'+'#{subsection[(annotation["subtype"].capitalize)]}'+'</span>'),
                                            theme: 'tooltipster-light',
                                            trigger: 'hover',
                                            interactive: true
                                          });
                                        });
                                %br
                                -divDibu="dibujo:#{miFinalIndex}"
                                -divContent = "content:#{miFinalIndex}"
                                -divEvidences = "evidences:#{miFinalIndex}"
                                %div{:id=>"#{divDibu}"}
                                :javascript
                                  pfamArray.push([generateGraphicsSeq("#{divDibu}",#{createPfamStructure(annotation,@uniprotLength,annClass)}),"#{divDibu}",#{createPfamStructure(annotation,@uniprotLength,annClass)}]);
                                %div{:id=>"#{divContent}",:class=>"hideContent",:style=>"display:none"}
                                  %h4
                                    Details
                                  -if annotation["start"]==annotation["end"]
                                    ="Position: "+annotation["start"].to_s
                                  -else
                                    ="Position: "+annotation["start"].to_s+" - "+annotation["end"].to_s
                                  %br
                                  -if !annotation["original"].nil? and !annotation["variation"].nil?
                                    ="Variation: #{annotation["original"]} "+ "→".html_safe + " #{annotation["variation"]}"
                                    %br
                                  -if !annotation["description"].nil?
                                    ="Description: #{annotation["description"].gsub(";;","<br>&ensp;&ensp;&middot;")}".html_safe
                                    %br
                                  -if !annotation["polyphen"].nil?
                                    ="Polyphen prediction: #{annotation["polyphen"]}"
                                    %br
                                  -if !annotation["disease"].nil?
                                    ="Disease: "
                                    =link_to(annotation["disease"].split("/")[1].strip,"http://disease-ontology.org/term/#{annotation["disease"].split("/")[0].strip}",target: "_blank")
                                    %br
                                  -if !annotation["evidence"].nil? or !annotation["link"].nil?
                                    -if annClass == "phosphosite"
                                      -evidences = annotation["link"]
                                    -else
                                      -evidences = annotation["evidence"]
                                    #evidence
                                      %a.nostyle{:href=>"javascript:toggleVisibility('#{divEvidences}');"}
                                        %img{:src=>asset_path("label.png")}
                                        -if annClass=="uniprot" or annClass=="phosphosite"
                                          = evidences.length.to_s + " evidences"
                                        -elsif annClass=="iedb" or annClass=="biomuta"
                                          = "1 evidence"
                                        %img{:src=>asset_path("arrow.png")}
                                      %div{:id=>"#{divEvidences}",:class=>"hideContent",:style=>"display:none"}
                                        %ul
                                          -myEvidences = []
                                          -if annClass=="uniprot" 
                                            -myEvidences = evidences
                                          -elsif annClass=="phosphosite"
                                            -myEvidences = evidences
                                          -elsif annClass=="iedb"
                                            -myEvidences = [evidences]
                                          -if annClass=="biomuta" 
                                            -myEvidences = evidences
                                          -myEvidences.each do |evidence|
                                            -if annClass=="uniprot" or annClass=="biomuta"
                                              -if !evidence["code"].nil? or annClass=="biomuta"
                                                %li.standard
                                                  #infoDiv
                                                    %p{:style=>"margin:0;"}
                                                      -if !evidence["code"].nil?
                                                        Evidence code: 
                                                        %a{:href=>"http://www.ebi.ac.uk/ontology-lookup/browse.do?ontName=ECO&termId=#{evidence["code"]}",:target=>"_blank"}
                                                          = evidence["code"]
                                                          %br
                                                      -if !evidence["references"].nil?
                                                        -evidence["references"].each do |myref|
                                                          -refType=myref.split(":")[0]
                                                          -if refType=="PubMed"
                                                            PubMed:
                                                            %a{:href=>"http://www.ncbi.nlm.nih.gov/pubmed/?term=#{myref.split(":")[1]}",:target=>"_blank"}
                                                              =myref.split(":")[1]
                                                          -elsif refType=="PDB"
                                                            PDB:
                                                            %a{:href=>"http://www.rcsb.org/pdb/explore/explore.do?structureId=#{myref.split(":")[1]}",:target=>"_blank"}
                                                              =myref.split(":")[1]
                                                          -elsif refType=="UniProtKB"
                                                            UniProt:
                                                            %a{:href=>"http://www.uniprot.org/uniprot/#{myref.split(":")[1]}",:target=>"_blank"}
                                                              =myref.split(":")[1]
                                                          -else
                                                            =myref
                                                          %br
                                                    -if !evidence["info"].nil?
                                                      Additional information:
                                                      %ul#evidencesDiv{:style=>"margin-left:10px;"}
                                                        -evidence["info"].each do |additionalInfo|
                                                          %li
                                                            -if !additionalInfo["type"].nil?
                                                              Type: 
                                                              =additionalInfo["type"]
                                                              %br
                                                            -if !additionalInfo["description"].nil?
                                                              Description: 
                                                              =additionalInfo["description"]
                                                              %br
                                                            -if !additionalInfo["additional"].nil?
                                                              -if !additionalInfo["additional"]["disease"].nil?
                                                                Disease information:
                                                                %p{:style=>"margin-top:0;margin-bottom:0;margin-left:10px;"}
                                                                  -if !additionalInfo["additional"]["disease"]["text"].nil?
                                                                    =additionalInfo["additional"]["disease"]["text"]
                                                                    %br
                                                                  -if !additionalInfo["additional"]["disease"]["reference"].nil?
                                                                    Reference: 
                                                                    %a{:href=>"http://www.omim.org/entry/#{additionalInfo["additional"]["disease"]["reference"].split(":")[1]}",:target=>"_blank"}
                                                                      =additionalInfo["additional"]["disease"]["reference"]
                                                                    %br
                                            -elsif annClass=="iedb"
                                              %li.standard
                                                #infoDiv
                                                  %p
                                                    Evidence: 
                                                    %a{:href=>"http://www.iedb.org/epitope/#{evidence}",:target=>"_blank"}
                                                      =evidence
                                            -elsif annClass=="phosphosite"
                                              %li.standard
                                                #infoDiv
                                                  %p
                                                    Evidence: 
                                                    %a{:href=>"http://www.phosphosite.org/siteGroupAction.do?id=#{evidence[0]}&protOrg=#{evidence[1]}&showAllSites=true",:target=>"_blank"}
                                                      =evidence[0]
                                %br
  :javascript
    $j(window).load(function(){
      window.addEventListener("RangeFamInfo", function(evt){
        var start = evt.detail[0];
        var end = evt.detail[1];
        modifyPfam(start,end,"#{@uniprotLength}");
        modifyLinks(start,end);
      });
      window.addEventListener("HideInfo", function(evt){
        document.getElementById('loading').style.display = "block";
        document.getElementById('frameWithBorder').style.display = "none";
      });
      window.addEventListener("ShowInfo", function(evt){
        document.getElementById('loading').style.display = "none";
        document.getElementById('frameWithBorder').style.display = "block";
      });
      window.addEventListener("ResetInfo", function(evt){
        clearPfam();
        var hiddens = $j('.show');
        var hiddenContents = $j('.showContent');
        var selected = $j('.selected');
        for(var i = 0; i< hiddens.length;i++){
          var el = hiddens[i];
          el.className = el.className.replace(/(?:^|\s)show(?!\S)/g , 'hide');
        }
        for(var i = 0;i<hiddenContents.length;i++){
          var el = hiddenContents[i];
          el.className = el.className.replace(/(?:^|\s)showContent(?!\S)/g , 'hideContent');
          el.style.display = 'none';
        }
        for(var i = 0;i<selected.length;i++){
          var el = selected[i];
          $j(el).removeClass("selected");
        }
      });
    });
  
