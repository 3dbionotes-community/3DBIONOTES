listen ${NGINX_PORT};
server_name _;

root /app/public;

# Proxy /bws/api/* to Django backend
location /bws/api/ {
  proxy_pass http://host.docker.internal:${BWS_API_PORT}/api/;
  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-Port $server_port;
}

# Proxy /ws/lrs/* to LRS backend
location /ws/lrs/ {
  proxy_pass http://host.docker.internal:${LRS_API_PORT}/;
  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-Port $server_port;
}

# Serve static files for Rails
location / {
  try_files $uri @rails;
  gzip_static on;
  expires max;
  add_header Cache-Control public;
}

location @rails {
  proxy_pass http://web:3000;
  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-Host $host:$server_port;
  proxy_set_header X-Forwarded-Port $server_port;
  add_header Access-Control-Allow-Origin *;
  add_header Access-Control-Allow-Headers *;
  add_header Access-Control-Expose-Headers Content-Type;
}
